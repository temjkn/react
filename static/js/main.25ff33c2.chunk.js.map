{"version":3,"sources":["components/profile/profileInfo/ProfileInfo.module.css","components/nav/Nav.module.css","components/profile/MyPosts/post/Post.module.css","components/Friends/Friends.module.css","components/profile/Profile.module.css","components/dialogs/Dialogs.module.css","components/header/Header.js","components/Friends/FriendsItem/FriendsItem.js","components/Friends/Friends.js","components/nav/friendsContainer.js","components/nav/Nav.js","components/profile/profileInfo/ProfileInfo.js","redux/profile-reduser.js","components/profile/MyPosts/post/Post.js","components/profile/MyPosts/MyPosts.js","components/profile/MyPosts/MyPostsContainer.js","components/profile/Profile.js","components/news/News.js","components/setting/Setting.js","redux/dialogs-reducer.js","components/dialogs/DialogItem/DialogItem.js","components/dialogs/Message/Message.js","components/dialogs/Dialogs.js","components/dialogs/DialogsContainer.js","App.js","serviceWorker.js","redux/friendList-reducer.js","redux/redux-store.js","index.js"],"names":["module","exports","Header","className","FriendsItem","props","href","state","linkOnPage","classes","friendItem","friendPhoto","alt","name","src","photo","Friends","friendsList","map","el","key","id","friendsWrap","FriendsContainer","connect","Nav","nav","activeClassName","active","to","ProfileInfo","top_image","user_info","user_photo","user_list","initialStore","postsData","message","likesCount","newPostText","profileReducer","stateCopy","action","type","textMessage","postsDataLength","length","idNumber","i","Post","post_item","post_photo","post_text","text","onClick","clickActionCreator","button","like","MyPosts","postsElements","post","newPostElement","React","createRef","new_news","placeholder","ref","onChange","current","value","updateNewPostText","addPost","news_wrap","reverse","MyPostsContainer","profilePage","dispatch","updateNewPostTextActionCreator","Profile","News","Setting","dialogsData","messagesData","your","newMessageText","dialogsReducer","DialogItem","dialog","Message","isYour","yourMessage","Dialogs","dialogsElements","messageElements","addTextMessage","dialogs_wrap","dialogs","messages","newMessage","updateTextMessage","newMessageInput","AddMessage","DialogsContainer","dialogsPage","updateTextMessageActionCreator","App","path","render","component","Boolean","window","location","hostname","match","friendsListReducer","require","store","createStore","combineReducers","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.25ff33c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"top_image\":\"ProfileInfo_top_image__35v16\",\"user_info\":\"ProfileInfo_user_info__11vhq\",\"user_photo\":\"ProfileInfo_user_photo__3rTK6\",\"user_list\":\"ProfileInfo_user_list__13WZ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3oF4R\",\"active\":\"Nav_active__C6FOB\",\"friendsWrap\":\"Nav_friendsWrap__1Ddit\",\"friendItem\":\"Nav_friendItem__2PbWh\",\"friendPhoto\":\"Nav_friendPhoto__12hjO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_item\":\"Post_post_item__3yDmn\",\"post_photo\":\"Post_post_photo__1lHsL\",\"like\":\"Post_like__9UxM1\",\"add_like\":\"Post_add_like__32_R2\",\"button\":\"Post_button__2L1vc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsWrap\":\"Friends_friendsWrap__1ROI_\",\"friendItem\":\"Friends_friendItem__38AaS\",\"friendPhoto\":\"Friends_friendPhoto__2l4bV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top_image\":\"Profile_top_image__1VKE4\",\"user_info\":\"Profile_user_info__2KdWh\",\"user_photo\":\"Profile_user_photo__3PUo_\",\"user_list\":\"Profile_user_list__R5YQB\",\"new_news\":\"Profile_new_news__3hADn\",\"news_wrap\":\"Profile_news_wrap__3pkjX\",\"news_item\":\"Profile_news_item__3ReS7\",\"news_photo\":\"Profile_news_photo__1X3FR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_wrap\":\"Dialogs_dialogs_wrap__2adFS\",\"dialogs\":\"Dialogs_dialogs__wMdKc\",\"dialog\":\"Dialogs_dialog__1iY2p\",\"active\":\"Dialogs_active__7enAM\",\"messages_wrap\":\"Dialogs_messages_wrap__S6utS\",\"messages\":\"Dialogs_messages__1SKHz\",\"message\":\"Dialogs_message__fFswP\",\"yourMessage\":\"Dialogs_yourMessage__2StG2\",\"newMessageInput\":\"Dialogs_newMessageInput__1c9NQ\"};","import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header(){\r\n    return(\r\n        <header className=\"header\"> I`m header</header>\r\n    );\r\n}\r\nexport default Header;","import React from 'react';\r\nimport classes from './../Friends.module.css';\r\n\r\nfunction FriendsItem(props){\r\n    return(\r\n        <a href={props.state.linkOnPage} className={classes.friendItem}>\r\n            <img className = {classes.friendPhoto} alt={props.state.name} src={props.state.photo}/>\r\n            <span>{props.state.name}</span>\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default FriendsItem;","import React from 'react';\r\nimport classes from './Friends.module.css';\r\nimport FriendsItem from './FriendsItem/FriendsItem'\r\n\r\nfunction Friends(props){\r\n    let friendsList =  props.friendsList.map(\r\n        el => <FriendsItem key = {el.id} state={el}/>\r\n    )\r\n    return(\r\n        <div className={classes.friendsWrap}>\r\n            {friendsList}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Friends;","import { connect } from \"react-redux\";\r\nimport Friends from \"../Friends/Friends\";\r\n\r\n{/* <StoreContext.Consumer>\r\n    {(store) => {\r\n        let state = store.getState();\r\n        return <Friends friendsList = {state.friendsList}/>\r\n    }}\r\n</StoreContext.Consumer> */}\r\n\r\nlet mapStateToProps = (state) => ({friendsList : state.friendsList})\r\n\r\nconst FriendsContainer = connect(mapStateToProps)(Friends)\r\n\r\nexport default FriendsContainer;","import React from 'react';\r\nimport classes from './Nav.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport FriendsContainer from './friendsContainer.js';\r\n\r\nfunction Nav(props){\r\n    return(\r\n        <div>\r\n            <nav className={classes.nav}>\r\n                <NavLink activeClassName={classes.active} to=\"/profile\">profile</NavLink>\r\n                <NavLink activeClassName={classes.active} to=\"/dialogs\">messages</NavLink>\r\n                <NavLink activeClassName={classes.active} to=\"/news\">news</NavLink>\r\n                <NavLink activeClassName={classes.active} to=\"/setting\">setting</NavLink>\r\n            </nav>\r\n            <hr/>\r\n            FRIENDS\r\n            <FriendsContainer/>\r\n        </div>\r\n    );\r\n}\r\nexport default Nav;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nfunction ProfileInfo(){\r\n    return(\r\n        <div>\r\n            <div className={classes.top_image}>\r\n                <img alt='we' src=\"https://image.shutterstock.com/image-photo/bright-spring-view-cameo-island-260nw-1048185397.jpg\"/>\r\n            </div>\r\n            <div className={classes.user_info}>\r\n                <div className={classes.user_photo}>\r\n                    <img alt='we' src=\"https://miro.medium.com/max/1200/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg\"/>\r\n                </div>\r\n                <div>\r\n                    <h2>Fred</h2>\r\n                    <span className={classes.user_list}>Date of Birth: <span>23 dec.</span></span>\r\n                    <span className={classes.user_list}>City: <span>Polock</span></span>\r\n                    <span className={classes.user_list}>Education: <span>BSU</span></span>\r\n                </div>\r\n            </div>\r\n      </div>\r\n    );\r\n}\r\nexport default ProfileInfo;","const UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT';\r\nconst ADD_POST = 'ADD_POST';\r\nconst CLICK = 'CLICK';\r\n\r\nlet initialStore = {\r\n    postsData : [\r\n    {id: 1, message: \"hi!\", likesCount:1},\r\n    {id: 2, message: \"ASDAShi!erwr\", likesCount:25},\r\n    {id: 3, message: \"ASDSDASD\", likesCount:36},\r\n    {id: 4, message: \"message\", likesCount:5}\r\n    ],\r\n    newPostText : \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialStore,action) => {\r\n\r\n    let stateCopy;\r\n\r\n    switch(action.type){\r\n        case UPDATE_NEW_POST_TEXT :{\r\n            return {...state,newPostText : action.textMessage};//сделал копию стейта, для того чтобы функция connect()() увидела изменения и перерисовала страницу\r\n        }\r\n        case ADD_POST :{\r\n            stateCopy = {...state};\r\n            let postsDataLength = [...state.postsData].length;\r\n            if(stateCopy.newPostText !== ''){\r\n                let idNumber = postsDataLength + 1;\r\n                return {\r\n                    ...state,\r\n                    postsData : [\r\n                        ...state.postsData,\r\n                        { //добавил новый обьект в массив с постами\r\n                            id: idNumber,\r\n                            message: stateCopy.newPostText,\r\n                            likesCount:0\r\n                        }\r\n                    ],\r\n                    newPostText : ''\r\n                }\r\n                    // аналог дабавления обьекта( нет push())\r\n                    // let newPost = {\r\n                    //     id: idNumber,\r\n                    //     message: stateCopy.newPostText,\r\n                    //     likesCount:0\r\n                    // };\r\n                    // stateCopy.postsData.push(newPost);\r\n            }\r\n            break;\r\n        }\r\n        case CLICK : {\r\n            stateCopy = {...state};\r\n            stateCopy.postsData = [...state.postsData];\r\n            for(let i = 0; i < stateCopy.postsData.length; i++){\r\n                if(stateCopy.postsData[i].id === action.id){\r\n                    stateCopy.postsData[i].likesCount++;\r\n                }\r\n            }\r\n            return stateCopy;\r\n        }\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\n\r\n//creator для страницы постов\r\nexport const addPostActionCreator = () => ({type : ADD_POST}); //создаю обьект для dispatch\r\nexport const updateNewPostTextActionCreator = (text) => ({type : UPDATE_NEW_POST_TEXT, textMessage : text}); //создаю обьект для dispatch\r\nexport const clickActionCreator = (id) => ({type : CLICK, id : id}); //создаю обьект для dispatch\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nfunction Post(props){\r\n    let clickCounter = () => {\r\n        props.clickActionCreator(props.id)\r\n    }\r\n    return(\r\n        <div className={classes.post_item}>\r\n            <div className={classes.post_photo}>\r\n                <img alt='we' src=\"https://miro.medium.com/max/1200/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg\"/>\r\n            </div>\r\n            <div className={classes.post_text}>\r\n                <p>{props.text}</p>\r\n                <button onClick = {clickCounter} className= {'button ' + classes.button}>ADD LIKE</button>\r\n                <span className={classes.like}>like: {props.like}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Post;","import React from 'react';\r\nimport classes from './../Profile.module.css';\r\nimport Post from './post/Post';\r\nfunction MyPosts(props){\r\n    // получил массив из постов в state и добавил в обьект postsElements\r\n    let postsElements = props.postsData.map(\r\n        post=> <Post key = {post.id} clickActionCreator =  {props.clickActionCreator} text={post.message} like={post.likesCount} id={post.id}/>\r\n    );\r\n\r\n    // получил доступ к textarea через ref\r\n    let newPostElement = React.createRef();\r\n\r\n    // добавил новый пост\r\n    let addPost = ()=>{\r\n        props.addPost()\r\n    };\r\n\r\n    // изменил и добавил значение в textareat из state\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <h1>My posts</h1>\r\n            <textarea \r\n            className={classes.new_news} \r\n            placeholder=\"your news\"\r\n            ref={newPostElement} \r\n            onChange = {onPostChange} \r\n            value ={props.newPostText}\r\n            />\r\n            <input className=\"button\" type=\"submit\" value='send' onClick={ addPost }/>\r\n            <div className={classes.news_wrap}>\r\n                {postsElements.reverse()}\r\n            </div>\r\n      </div>\r\n    );\r\n}\r\nexport default MyPosts;","import { addPostActionCreator,updateNewPostTextActionCreator,clickActionCreator} from '../../../redux/profile-reduser';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n//вариант сделаннный руками, для понимания процесса\r\n// function MyPostsContainer(props){\r\n    \r\n//     // let state = props.store.getState();\r\n    \r\n\r\n//     return(\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//                 let state = store.getState();\r\n//                 // добавил новый пост\r\n//                 let addPost = ()=>{\r\n//                     store.dispatch(addPostActionCreator());\r\n//                 };\r\n\r\n//                 // изменил и добавил значение в textareat из state\r\n//                 let onPostChange = (text) => {\r\n//                     let action = (updateNewPostTextActionCreator(text));\r\n//                     store.dispatch(action);\r\n//                 };\r\n//                 return <MyPosts \r\n//                     updateNewPostText = {onPostChange} \r\n//                     addPost = {addPost} \r\n//                     postsData = {state.profilePage.postsData} \r\n//                     newPostText={state.profilePage.newPostText}\r\n//                 />\r\n//                 }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData : state.profilePage.postsData,\r\n        newPostText : state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispathToProps = (dispatch) => {\r\n    return{\r\n        addPost : () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        updateNewPostText : (text) => {\r\n            let action = (updateNewPostTextActionCreator(text));\r\n            dispatch(action);\r\n        },\r\n        clickActionCreator: (id) => {\r\n            let action = clickActionCreator(id);\r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispathToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './profileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nfunction Profile(props){\r\n    return(\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPostsContainer/>\r\n      </div>\r\n    );\r\n}\r\nexport default Profile;","import React from 'react';\r\n// import classes from './News.module.css';\r\n\r\nfunction News(){\r\n    return(\r\n        <div>\r\n            <span>News</span>\r\n        </div>\r\n    );\r\n}\r\nexport default News;","import React from 'react';\r\n// import classes from './Setting.module.css';\r\n\r\nfunction Setting(){\r\n    return(\r\n        <div>\r\n            <span>Setting</span>\r\n        </div>\r\n    );\r\n}\r\nexport default Setting;","const UPDATE_TEXT_MESSAGE = 'UPDATE_TEXT_MESSAGE';\r\nconst ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nlet initialStore = {\r\n    dialogsData : [\r\n        {id: 1, name: \"Valera\"},\r\n        {id: 2, name: \"Bob\"},\r\n        {id: 3, name: \"Alex\"},\r\n        {id: 4, name: \"John\"}\r\n        ],\r\n    messagesData : [\r\n    {id: 1, message: \"MessageSShi!\", your: false},\r\n    {id: 2, message: \"MessageSSASDAShi!erwr\", your: false},\r\n    {id: 3, message: \"MessageSSASDSDASD\", your: true},\r\n    {id: 4, message: \"MessageSSmessage\", your: true},\r\n    {id: 5, message: \"MessageSSmessage\", your: true},\r\n    {id: 6, message: \"MessageSSmessage\", your: false},\r\n    {id: 7, message: \"lastMessageSSmessage\", your: true}\r\n    ],\r\n    newMessageText : ''\r\n};\r\n\r\nconst dialogsReducer = (state = initialStore,action) => {\r\n    let stateCopy;\r\n    switch(action.type){\r\n        case UPDATE_TEXT_MESSAGE :{\r\n            return {\r\n                ...state,\r\n                newMessageText : action.textMessage\r\n            };\r\n        }\r\n        case ADD_MESSAGE :{\r\n            stateCopy = {...state};\r\n            if(stateCopy.newMessageText !== ''){\r\n                return {\r\n                    ...state,\r\n                    messagesData : [\r\n                        ...state.messagesData,\r\n                        {\r\n                            id: 8,\r\n                            message: stateCopy.newMessageText,\r\n                            your: true\r\n                        }\r\n                    ],\r\n                    newMessageText : ''\r\n                }\r\n            };\r\n            break;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//creator для страницы сообщений\r\nexport const updateTextMessageActionCreator = (text) => ({type : UPDATE_TEXT_MESSAGE, textMessage : text});  //создаю обьект для dispatch\r\nexport const addMessageActionCreator = () => ({type : ADD_MESSAGE}); //создаю обьект для dispatch\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction DialogItem(props){\r\n    return(\r\n        <div className={classes.dialog}>\r\n            <NavLink activeClassName={classes.active} to={'/dialogs/2' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nfunction Message(props){\r\n    if(props.isYour){\r\n        return(\r\n            <div className={classes.message +' ' + classes.yourMessage}>\r\n                {props.message}\r\n            </div>\r\n        );\r\n    }else{\r\n        return(\r\n            <div className={classes.message}>\r\n                {props.message}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\n\r\nfunction Dialogs(props){\r\n    let dialogsElements = props.state.dialogsData.map(\r\n        el => <DialogItem key = {el.id} name={el.name} id={el.id}/>\r\n    );\r\n    let messageElements = props.state.messagesData.map(\r\n        el => <Message key = {el.id} message={el.message} isYour = {el.your}/>\r\n    );\r\n    // получил доступ к textarea\r\n    let addTextMessage = React.createRef();\r\n\r\n\r\n    // отслеживаю изменения в textarea\r\n    let updateTextMessage = () => {\r\n        let text = addTextMessage.current.value;\r\n        props.updateTextMessage(text) // вызываю функцию updateTextMessageActionCreator, передаю ей значение текстового поля(let text)\r\n    };                                //и тип по умолчанию из dialogs-reduser.js, и потом передаю методу dispatch в файл state.js\r\n\r\n    // добавляю новое сообщение с state и перерисовываю страницу\r\n    let AddMessage = () => {\r\n        props.AddMessage() //вызываю функцию updateTextMessageActionCreator из dialogs-reducer.js,\r\n    };                     //передаю её значения методу dispatch в файл state.js\r\n\r\n    return(\r\n        <div className={classes.dialogs_wrap}>\r\n            <div className={classes.dialogs}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messageElements}\r\n                <div className={classes.newMessage}>\r\n                    <textarea\r\n                        onChange = {updateTextMessage}\r\n                        ref={addTextMessage} \r\n                        placeholder=\"new message\"\r\n                        value = {props.state.newMessageText}\r\n                        className= {classes.newMessageInput}\r\n                    />\r\n                    <input onClick = {AddMessage} value='send message' type='submit' className= {'button ' + classes.button}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Dialogs;","import { addMessageActionCreator,updateTextMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\n\r\n// внизу функция созданная руками, connect()() делает тоже, но компактнее - передаю обьекты со state и dispatch и передаю нужной компоненте\r\n// function DialogsContainer(props){\r\n\r\n//     return(\r\n//         <StoreContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     let state = store.getState();\r\n\r\n//                     // отслеживаю изменения в textarea\r\n//                     let updateTextMessage = (text) => {\r\n//                         store.dispatch(updateTextMessageActionCreator(text)) // вызываю функцию updateTextMessageActionCreator, передаю ей значение текстового поля(let text)\r\n//                     };                                                       //и тип по умолчанию из dialogs-reduser.js, и потом передаю методу dispatch в файл state.js\r\n                \r\n//                     // добавляю новое сообщение с state и перерисовываю страницу\r\n//                     let AddMessage = () => {\r\n//                         store.dispatch(addMessageActionCreator()) //вызываю функцию updateTextMessageActionCreator из dialogs-reducer.js,\r\n//                     };  \r\n//                                                               //передаю её значения методу dispatch в файл state.js\r\n//                     return <Dialogs\r\n//                         state = {state.dialogsPage}\r\n//                         updateTextMessage = {updateTextMessage} \r\n//                         AddMessage = {AddMessage}\r\n//                         />\r\n//                 }\r\n//         }\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }\r\n\r\nlet mapStateToProps = (state) => ({state : state.dialogsPage})\r\n\r\nlet mapStoreToProps = (dispatch) => {\r\n    return {\r\n        updateTextMessage : (text) => {\r\n            dispatch(updateTextMessageActionCreator(text))\r\n        },\r\n        AddMessage : () => {\r\n            dispatch(addMessageActionCreator())\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps,mapStoreToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","import React from 'react';\nimport './App.css';\nimport Header from './components/header/Header';\nimport Nav from './components/nav/Nav';\nimport Profile from './components/profile/Profile';\nimport News from './components/news/News';\nimport Setting from './components/setting/Setting';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport DialogsContainer from './components/dialogs/DialogsContainer';\n\nfunction App(props) {\n  return (\n    <BrowserRouter>\n      <div className=\"app-wraper\">\n        <Header/>\n        <Nav/>\n        <div className='content'>\n          <Route path=\"/profile\" render={()=>\n            <Profile />\n          }\n          />\n          <Route path=\"/dialogs\" render = { ()=> \n            <DialogsContainer />\n          }\n          />\n          <Route path=\"/news\" component={News}/>\n          <Route path=\"/Setting\" component={Setting}/>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialStore = [\r\n    {name:\"shhlad\",photo:\"https://miro.medium.com/max/1200/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg\", linkOnPage:\"15\"},\r\n    {name:\"Blad\",photo:\"https://miro.medium.com/max/1200/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg\", linkOnPage:\"#rt\"},\r\n    {name:\"Flat\",photo:\"https://miro.medium.com/max/1200/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg\", linkOnPage:\"https://www.youtube.com/watch?v=GW5PwlzXBDc&list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8&index=31&t=0s\"}\r\n];\r\n\r\nconst friendsListReducer = (state = initialStore) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default friendsListReducer;","import dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reduser\";\r\nimport friendsListReducer from \"./friendList-reducer\";\r\n\r\nconst { createStore, combineReducers } = require(\"redux\");\r\n\r\nlet redusers = combineReducers({\r\n    profilePage : profileReducer,\r\n    dialogsPage : dialogsReducer,\r\n    friendsList : friendsListReducer\r\n});\r\n\r\nlet store = createStore(redusers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport { Provider } from 'react-redux';\n\n// функция, перерисовывает страницу при каждом вызове\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store = {store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}